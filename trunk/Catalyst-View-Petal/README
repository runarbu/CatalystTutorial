NAME
    Catalyst::View::Petal - Petal View Class

SYNOPSIS
        # use the helper
        create.pl view Petal Petal

        # lib/MyApp/View/Petal.pm
        package MyApp::View::Petal;

        use base 'Catalyst::View::Petal';

        __PACKAGE__->config(
            input              => 'XML',
            output             => 'XML',
            error_on_undef_var => 0
        );

        1;

        # Meanwhile, maybe in an 'end' action
        $c->forward('MyApp::View::Petal');

DESCRIPTION
    This is the "Petal" view class. Your subclass should inherit from this
    class.

  METHODS
    process
        Renders the template specified in "$c->stash->{template}" or
        "$c->request->match". Template variables are set up from the
        contents of "$c->stash", augmented with "base" set to
        "$c->req->base", "c" to $c and "name" to "$c->config->{name}".
        Output is stored in "$c->response->body".

    config
        This allows your view subclass to pass additional settings to the
        Petal config hash.

SEE ALSO
    Petal, Catalyst, Catalyst::Base.

AUTHOR
    Christian Hansen, "ch@ngmedia.com"

COPYRIGHT
    This program is free software, you can redistribute it and/or modify it
    under the same terms as Perl itself.

